<?php

/**
 * @module  GameCenter
 * @author  Christian Seiler <christian@christianseiler.ch>
 * @since   1.0.0
 */

namespace fhnw\modules\gamecenter\models;

use humhub\components\ActiveRecord;

/**
 * This is the model class for the table "leaderboard".
 *
 * @property int       $id
 * @property string    $name
 * @property string    $title
 * @property string    $type The type of leaderboard, classic or recurring.
 * @property string    $game_id
 * @property string    $created_at
 * @property int       $created_by
 * @property string    $updated_at
 * @property int       $updated_by
 * @property-read Game $game
 */
class Leaderboard extends ActiveRecord
{

  public const EVENT_BEFORE_SOFT_DELETE = 'beforeSoftDelete';

  public const CLASSIC = 0;

  public const RECURRING = 1;

  /**
   * @inheritdoc
   * @static
   * @return string
   * @noinspection PhpMissingParentCallCommonInspection
   */
  public static function tableName(): string
  {
    return 'leaderboard';
  }

  /**
   * getGame
   *
   * @return \yii\db\ActiveQuery
   */
  public function getGame(): ActiveQuery
  {
    return $this->hasOne(Game::class, ['id' => 'game_id']);
  }
}

class ClassicLeaderboard extends Leaderboard {

  public function init()
  {
    parent::init(); // TODO: Change the autogenerated stub
  }

}

class RecurringLeaderboard extends Leaderboard {
  /** @inheritdoc */
  public $type = Self::RECURRING;
  public function init()
  {
    parent::init(); // TODO: Change the autogenerated stub
  }

}
/*
 *  * Recurring properties
 * startDate
 * nextStartDate
 * duration
 */
